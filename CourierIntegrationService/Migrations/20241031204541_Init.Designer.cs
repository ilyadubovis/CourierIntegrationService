// <auto-generated />
using System;
using CourierIntegrationService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourierIntegrationService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241031204541_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourierIntegrationService.Models.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Classification", b =>
                {
                    b.Property<int>("ClassificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassificationId"));

                    b.Property<string>("ClassificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassificationId");

                    b.ToTable("Classification");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceAreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceAreaDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ShipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Receiver", b =>
                {
                    b.Property<Guid>("ReceiverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceiverId");

                    b.HasIndex("AddressId");

                    b.ToTable("Receiver");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Shipment", b =>
                {
                    b.Property<Guid>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ClassificationIdId")
                        .HasColumnType("int");

                    b.Property<string>("CourierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShipmentStatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipmentId");

                    b.HasIndex("ClassificationIdId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("ShipmentStatusId");

                    b.HasIndex("ShipperId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.ShipmentStatus", b =>
                {
                    b.Property<int>("ShipmentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentStatusId"));

                    b.Property<string>("ShipmentStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipmentStatusId");

                    b.ToTable("ShipmentStatus");

                    b.HasData(
                        new
                        {
                            ShipmentStatusId = 1,
                            ShipmentStatusName = "Unknown"
                        },
                        new
                        {
                            ShipmentStatusId = 2,
                            ShipmentStatusName = "LabelCreated"
                        },
                        new
                        {
                            ShipmentStatusId = 3,
                            ShipmentStatusName = "OutForDelivery"
                        },
                        new
                        {
                            ShipmentStatusId = 4,
                            ShipmentStatusName = "Shipped"
                        },
                        new
                        {
                            ShipmentStatusId = 5,
                            ShipmentStatusName = "AtLocalFacility"
                        },
                        new
                        {
                            ShipmentStatusId = 6,
                            ShipmentStatusName = "Delivered"
                        },
                        new
                        {
                            ShipmentStatusId = 7,
                            ShipmentStatusName = "Delayed"
                        },
                        new
                        {
                            ShipmentStatusId = 8,
                            ShipmentStatusName = "Cancelled"
                        });
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Shipper", b =>
                {
                    b.Property<Guid>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipperId");

                    b.HasIndex("AddressId");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Event", b =>
                {
                    b.HasOne("CourierIntegrationService.Models.Shipment", "Shipment")
                        .WithMany("Events")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Receiver", b =>
                {
                    b.HasOne("CourierIntegrationService.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Shipment", b =>
                {
                    b.HasOne("CourierIntegrationService.Models.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationIdId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CourierIntegrationService.Models.Receiver", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourierIntegrationService.Models.ShipmentStatus", "ShipmentStatus")
                        .WithMany()
                        .HasForeignKey("ShipmentStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CourierIntegrationService.Models.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Classification");

                    b.Navigation("Receiver");

                    b.Navigation("ShipmentStatus");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Shipper", b =>
                {
                    b.HasOne("CourierIntegrationService.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("CourierIntegrationService.Models.Shipment", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
